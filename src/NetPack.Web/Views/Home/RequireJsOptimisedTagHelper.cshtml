@{
    ViewData["Title"] = "Multiple Compiled Typescript Files";
}

<p>
    Netpack offers a RequireJS TagHelper for optimising AMD modules into a bundle using r.js optimiser, within your Razor pages directly:
    <pre>
        &lt;require-js-optimise in=&quot;amd/*.js&quot;
                         main=&quot;SomePage&quot;
                         out-name=&quot;built.js&quot;
                         out-path=&quot;/netpack&quot;&gt;
        &lt;/require-js-optimise&gt;
</pre>
</p>


<ul>
    <li>
        in = the files containing the AMD modules to be included in the optimisation process for the page.
    </li>
    <li>
        main = the AMD module that is the entry point for the page.
    </li>
    <li>
        out-name = the name of the optimised js file that is produced as the output.
    </li>
    <li>
        out-path = the path where the optimised file (as specified by out-name) can be served.
    </li>
</ul>



<p>For example, on this page, these AMD modules have been loaded from an optimised file:</p>
<ul id="modules"></ul>



@section scripts
    {


    <script data-main="/netpack/built.js" src="/lib/require.js"></script>
    <require-js-optimise in="amd/*.js"
                         main="SomePage"
                         out-name="built.js"
                         out-path="/netpack">
    </require-js-optimise>
    @*<script type="text/javascript" asp-src-include="/netpack/built.js"></script>*@

    @*<script type="text/javascript" src="/netpack/ts/Greeter.js"></script>
        <script type="text/javascript" src="/netpack/ts/Another.js"></script>*@

}


